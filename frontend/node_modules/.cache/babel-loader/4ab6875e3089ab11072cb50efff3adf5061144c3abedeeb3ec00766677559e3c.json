{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/todo_app_auth/frontend/src/components/NewTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./NewTodo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewTodo = props => {\n  _s();\n  // sets edit state , if in edit mode. true if not in edit mode.\n  const [isEdit, setIsEdit] = useState(true);\n  //  stores user entry and uses current todo value as default.\n  const [entry, setEntry] = useState(props.todo.todo);\n  // stores error message.\n  const [error, setError] = useState(null);\n  // input ref to access current todo edit input.\n  const inputRef = useRef();\n\n  // takes user as arg to get auth token, performs request to remove user from DB\n  const deleteTodoRequest = async user => {\n    // fetch req with todo id in params.\n    try {\n      const response = await fetch(\"/todos/\" + props.todo._id, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      // recevies updated todos from db\n      const data = await response.json();\n      // sets new list of todos.\n      props.setUserTodos(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // request to edit todo on db\n  const editTodoRequest = async user => {\n    // gets user edited entry.\n    const todo = entry;\n    try {\n      // patch request to server uses token for auth. sends updated to do\n      const response = await fetch(\"/todos/\" + props.todo._id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          todo\n        })\n      });\n\n      // receives update todo list from db\n      const data = await response.json();\n\n      // if res not ok sets error and focuses on todo edit input.\n      if (!response.ok) {\n        setError(data.error);\n        inputRef.current.focus();\n      }\n\n      // if res ok sets todo data\n      if (response.ok) {\n        props.setUserTodos(data);\n        // sets edit to true ie exit edit mode\n        setIsEdit(true);\n        // removes error message.\n        setError(null);\n      }\n    } catch {\n      console.log(error);\n    }\n  };\n\n  // useEffect runs when clear state is changed , this is used to reset buttons.\n  useEffect(() => {\n    // turns off in edit mode.\n    setIsEdit(true);\n    // removes all erros.\n    setError(null);\n    // sets existing todo to default value.\n    setEntry(props.todo.todo);\n  }, [props.clearEdit]);\n\n  // handles initial edit button click .\n  const handleEdit = async e => {\n    // focuses on to do input to edit.\n    inputRef.current.focus();\n    // clears all other buttons to default\n    await props.setClearEdit(true);\n    //  sets clear to default after buttons have been reset.\n    await props.setClearEdit(null);\n    // sets edit mode for selected todo.\n    setIsEdit(false);\n  };\n\n  // removes item from DB when delete button clicked.\n  const handleDelete = async () => {\n    // gets user from local storage.\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // clears all other buttons to default\n    await props.setClearEdit(true);\n    //  sets clear to default after buttons have been reset.\n    await props.setClearEdit(null);\n    // makes req to delete todo from DB\n    deleteTodoRequest(user);\n  };\n\n  // handles click when apply confirm button is clicked.\n  const handleApply = () => {\n    // gets user from localstorage.\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // makes req to edit todo.\n    editTodoRequest(user);\n  };\n  const handleCancel = () => {\n    // sets edit mode of current to do off.\n    setIsEdit(true);\n    // resets user entry.\n    setEntry(null);\n    // removes error.\n    setError(null);\n  };\n\n  // stores user edited entry and checks for character limit.\n  const handleEditChange = (e, set) => {\n    // sets user entry\n    set(e.target.value);\n    // checks if entered characters below 140\n    if (e.target.value.length === 140) {\n      // sets error\n      setError(\"Max length 140 character\");\n    } else {\n      setError(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"newTodo-form container px-0 pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newTodo-title-container mb-3\",\n      children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTdo-error-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group edit-group \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control p-1 ${!isEdit ? \"active-edit\" : \"null\"}`,\n        id: \"newTodo\",\n        placeholder: \"Enter Todo\",\n        value: !isEdit ? entry : props.todo.todo,\n        readOnly: isEdit,\n        onChange: e => handleEditChange(e, setEntry),\n        ref: inputRef,\n        maxLength: 140\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary control-btn \",\n          onClick: handleEdit,\n          id: \"edit\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined control-symbol\",\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-dark control-btn \",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined control-symbol\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !isEdit && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info control-btn \",\n          onClick: handleApply,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined control-symbol\",\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-dark control-btn \",\n          onClick: handleCancel,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined control-symbol\",\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTodo, \"FTR8XfF10b38Og6Bot7ZoONFonM=\");\n_c = NewTodo;\nexport default NewTodo;\nvar _c;\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTodo","props","_s","isEdit","setIsEdit","entry","setEntry","todo","error","setError","inputRef","deleteTodoRequest","user","response","fetch","_id","method","headers","Authorization","token","data","json","setUserTodos","console","log","editTodoRequest","body","JSON","stringify","ok","current","focus","clearEdit","handleEdit","e","setClearEdit","handleDelete","parse","localStorage","getItem","handleApply","handleCancel","handleEditChange","set","target","value","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","readOnly","onChange","ref","maxLength","onClick","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/todo_app_auth/frontend/src/components/NewTodo.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"./NewTodo.css\";\n\nconst NewTodo = (props) => {\n  // sets edit state , if in edit mode. true if not in edit mode.\n  const [isEdit, setIsEdit] = useState(true);\n  //  stores user entry and uses current todo value as default.\n  const [entry, setEntry] = useState(props.todo.todo);\n  // stores error message.\n  const [error, setError] = useState(null);\n  // input ref to access current todo edit input.\n  const inputRef = useRef();\n\n  // takes user as arg to get auth token, performs request to remove user from DB\n  const deleteTodoRequest = async (user) => {\n    // fetch req with todo id in params.\n    try {\n      const response = await fetch(\"/todos/\" + props.todo._id, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      });\n      // recevies updated todos from db\n      const data = await response.json();\n      // sets new list of todos.\n      props.setUserTodos(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // request to edit todo on db\n  const editTodoRequest = async (user) => {\n    // gets user edited entry.\n    const todo = entry;\n    try {\n      // patch request to server uses token for auth. sends updated to do\n      const response = await fetch(\"/todos/\" + props.todo._id, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n        body: JSON.stringify({ todo }),\n      });\n\n      // receives update todo list from db\n      const data = await response.json();\n\n      // if res not ok sets error and focuses on todo edit input.\n      if (!response.ok) {\n        setError(data.error);\n        inputRef.current.focus();\n      }\n\n      // if res ok sets todo data\n      if (response.ok) {\n        props.setUserTodos(data);\n        // sets edit to true ie exit edit mode\n        setIsEdit(true);\n        // removes error message.\n        setError(null);\n      }\n    } catch {\n      console.log(error);\n    }\n  };\n\n  // useEffect runs when clear state is changed , this is used to reset buttons.\n  useEffect(() => {\n    // turns off in edit mode.\n    setIsEdit(true);\n    // removes all erros.\n    setError(null);\n    // sets existing todo to default value.\n    setEntry(props.todo.todo);\n  }, [props.clearEdit]);\n\n  // handles initial edit button click .\n  const handleEdit = async (e) => {\n    // focuses on to do input to edit.\n    inputRef.current.focus();\n    // clears all other buttons to default\n    await props.setClearEdit(true);\n    //  sets clear to default after buttons have been reset.\n    await props.setClearEdit(null);\n    // sets edit mode for selected todo.\n    setIsEdit(false);\n  };\n\n  // removes item from DB when delete button clicked.\n  const handleDelete = async () => {\n    // gets user from local storage.\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // clears all other buttons to default\n    await props.setClearEdit(true);\n    //  sets clear to default after buttons have been reset.\n    await props.setClearEdit(null);\n    // makes req to delete todo from DB\n    deleteTodoRequest(user);\n  };\n\n  // handles click when apply confirm button is clicked.\n  const handleApply = () => {\n    // gets user from localstorage.\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // makes req to edit todo.\n    editTodoRequest(user);\n  };\n\n  const handleCancel = () => {\n    // sets edit mode of current to do off.\n    setIsEdit(true);\n    // resets user entry.\n    setEntry(null);\n    // removes error.\n    setError(null);\n  };\n\n  // stores user edited entry and checks for character limit.\n  const handleEditChange = (e, set) => {\n    // sets user entry\n    set(e.target.value);\n    // checks if entered characters below 140\n    if (e.target.value.length === 140) {\n      // sets error\n      setError(\"Max length 140 character\");\n    } else {\n      setError(null);\n    }\n  };\n\n  return (\n    <form className=\"newTodo-form container px-0 pb-5\">\n      <div className=\"newTodo-title-container mb-3\">\n        {error && (\n          <div className=\"newTdo-error-container\">\n            <p className=\"m-0\">{error}</p>\n          </div>\n        )}\n      </div>\n      <div className=\"form-group edit-group \">\n        <input\n          type=\"text\"\n          className={`form-control p-1 ${!isEdit ? \"active-edit\" : \"null\"}`}\n          id=\"newTodo\"\n          placeholder=\"Enter Todo\"\n          value={!isEdit ? entry : props.todo.todo}\n          readOnly={isEdit}\n          onChange={(e) => handleEditChange(e, setEntry)}\n          ref={inputRef}\n          maxLength={140}\n        />\n\n        {isEdit && (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary control-btn \"\n              onClick={handleEdit}\n              id=\"edit\"\n            >\n              <span className=\"material-symbols-outlined control-symbol\">\n                edit\n              </span>\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-dark control-btn \"\n              onClick={handleDelete}\n            >\n              <span className=\"material-symbols-outlined control-symbol\">\n                delete\n              </span>\n            </button>\n          </>\n        )}\n\n        {!isEdit && (\n          <>\n            <button\n              type=\"button\"\n              className=\"btn btn-info control-btn \"\n              onClick={handleApply}\n            >\n              <span className=\"material-symbols-outlined control-symbol\">\n                done\n              </span>\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-dark control-btn \"\n              onClick={handleCancel}\n            >\n              <span className=\"material-symbols-outlined control-symbol\">\n                close\n              </span>\n            </button>\n          </>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default NewTodo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}