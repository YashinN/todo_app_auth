{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/todo_app_auth/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  // stores user info\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // sets if login or sign up\n  const [signup, setSignup] = useState(\"Log In\");\n  // stores all empty fields.\n  const [emptyFields, setEmptyFields] = useState([]);\n  // sets error\n  const [error, setError] = useState(null);\n\n  // clears states to default.\n  const clearStates = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setEmptyFields([]);\n    setError(null);\n  };\n\n  // makes request to server sends user credentials\n  const loginRequest = async () => {\n    try {\n      const response = await fetch(\"https://murky-stamp-production.up.railway.app/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // recieves auth token and user email from db\n      const data = await response.json();\n\n      // if res not ok sets error and recevies list of empty inputs from server.\n      if (!response.ok) {\n        // sets empty fields.\n        setEmptyFields(data.emptyFields);\n        setError(data.error);\n      }\n\n      // if res ok.\n      if (response.ok) {\n        // sets empty fields to default.\n        setEmptyFields([]);\n        // resets error.\n        setError(null);\n        // stores user token and email in local storage.\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        // sets login state.\n        props.setLoggedIn(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // request to create new user in db.\n  const signupRequest = async () => {\n    try {\n      // post req with user email and password.\n      const response = await fetch(\"https://murky-stamp-production.up.railway.app/user/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // receives user email and auth token.\n      const data = await response.json();\n      if (!response.ok) {\n        // sets empty fields to default.\n        setEmptyFields(data.emptyFields);\n        // sets error.\n        setError(data.error);\n      }\n      if (response.ok) {\n        setEmptyFields([]);\n        setError(null);\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        props.setLoggedIn(true);\n      }\n    } catch (eror) {\n      console.log(error);\n    }\n  };\n\n  // login button clicked, makes call to login request.\n  const handleLogin = () => {\n    loginRequest();\n  };\n\n  // sign up button clicked makes request to sign up user.\n  const handleSignUp = () => {\n    signupRequest();\n  };\n\n  // toggles menu from signup to login\n  const handleMenu = e => {\n    if (signup === \"Log In\") {\n      setSignup(\"Sign Up\");\n    } else {\n      setSignup(\"Log In\");\n    }\n    clearStates();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"p-5 login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"m-0\",\n          children: signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label mt-4\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${emptyFields.includes(\"email\") ? \"error\" : \"\"}`,\n          id: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label mt-4\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Enter Password\",\n          className: `form-control ${emptyFields.includes(\"password\") ? \"error\" : \"\"}`,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-btn-container mt-4\",\n        children: [signup === \"Log In\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary \",\n          onClick: handleLogin,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), signup === \"Sign Up\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: handleSignUp,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleMenu,\n          className: \"toggle-btn mx-3 text-secondary\",\n          children: signup === \"Log In\" ? \"Sign Up\" : \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"RqYkRnw5dkiy7+vH/p6usnI/UgA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","signup","setSignup","emptyFields","setEmptyFields","error","setError","clearStates","loginRequest","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","setLoggedIn","console","log","signupRequest","eror","handleLogin","handleSignUp","handleMenu","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","includes","id","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/todo_app_auth/frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Login.css\";\n\nconst Login = (props) => {\n  // stores user info\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // sets if login or sign up\n  const [signup, setSignup] = useState(\"Log In\");\n  // stores all empty fields.\n  const [emptyFields, setEmptyFields] = useState([]);\n  // sets error\n  const [error, setError] = useState(null);\n\n  // clears states to default.\n  const clearStates = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setEmptyFields([]);\n    setError(null);\n  };\n\n  // makes request to server sends user credentials\n  const loginRequest = async () => {\n    try {\n      const response = await fetch(\n        \"https://murky-stamp-production.up.railway.app/user/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, password }),\n        }\n      );\n\n      // recieves auth token and user email from db\n      const data = await response.json();\n\n      // if res not ok sets error and recevies list of empty inputs from server.\n      if (!response.ok) {\n        // sets empty fields.\n        setEmptyFields(data.emptyFields);\n        setError(data.error);\n      }\n\n      // if res ok.\n      if (response.ok) {\n        // sets empty fields to default.\n        setEmptyFields([]);\n        // resets error.\n        setError(null);\n        // stores user token and email in local storage.\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        // sets login state.\n        props.setLoggedIn(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // request to create new user in db.\n  const signupRequest = async () => {\n    try {\n      // post req with user email and password.\n      const response = await fetch(\n        \"https://murky-stamp-production.up.railway.app/user/signup\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, password }),\n        }\n      );\n\n      // receives user email and auth token.\n      const data = await response.json();\n\n      if (!response.ok) {\n        // sets empty fields to default.\n        setEmptyFields(data.emptyFields);\n        // sets error.\n        setError(data.error);\n      }\n\n      if (response.ok) {\n        setEmptyFields([]);\n        setError(null);\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        props.setLoggedIn(true);\n      }\n    } catch (eror) {\n      console.log(error);\n    }\n  };\n\n  // login button clicked, makes call to login request.\n  const handleLogin = () => {\n    loginRequest();\n  };\n\n  // sign up button clicked makes request to sign up user.\n  const handleSignUp = () => {\n    signupRequest();\n  };\n\n  // toggles menu from signup to login\n  const handleMenu = (e) => {\n    if (signup === \"Log In\") {\n      setSignup(\"Sign Up\");\n    } else {\n      setSignup(\"Log In\");\n    }\n    clearStates();\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"p-5 login-form\">\n        <div className=\"login-title-container\">\n          <h3 className=\"m-0\">{signup}</h3>\n\n          {error && (\n            <div className=\"error-container\">\n              <p className=\"m-0\">{error}</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\" className=\"form-label mt-4\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            className={`form-control ${\n              emptyFields.includes(\"email\") ? \"error\" : \"\"\n            }`}\n            id=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\" className=\"form-label mt-4\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Enter Password\"\n            className={`form-control ${\n              emptyFields.includes(\"password\") ? \"error\" : \"\"\n            }`}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <div className=\"login-btn-container mt-4\">\n          {signup === \"Log In\" && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary \"\n              onClick={handleLogin}\n            >\n              Log In\n            </button>\n          )}\n\n          {signup === \"Sign Up\" && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleSignUp}\n            >\n              Sign Up\n            </button>\n          )}\n\n          <button\n            type=\"button\"\n            onClick={handleMenu}\n            className=\"toggle-btn mx-3 text-secondary\"\n          >\n            {signup === \"Log In\" ? \"Sign Up\" : \"Log In\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}