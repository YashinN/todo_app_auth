{"ast":null,"code":"var _jsxFileName = \"/Users/yashin/Documents/GitHub/Codespace/todo_app_auth/frontend/src/components/AddTodo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n// css\nimport \"./AddTodo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodo = props => {\n  _s();\n  // stores user to do\n  const [addEntry, setAddEntry] = useState(\"\");\n  // sets error message\n  const [error, setError] = useState(null);\n\n  // clears or resets states.\n  const clear = () => {\n    setAddEntry(\"\");\n    setError(null);\n  };\n\n  // Request to add todo to db.\n  // Takes user a arg.\n  const addTodoRequest = async user => {\n    // stores user entry\n    const todo = addEntry;\n    try {\n      // sends todo and auth token to server.\n      const response = await fetch(\"/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        },\n        body: JSON.stringify({\n          todo\n        })\n      });\n\n      // gets all todos from server.\n      const data = await response.json();\n      // if res issue sets error.\n      if (!response.ok) {\n        // sets error with server error\n        setError(data.error);\n      }\n\n      //  if res ok sets todo data from server.\n      if (response.ok) {\n        props.setUserTodos(data);\n        // clears states.\n        clear();\n      }\n    } catch (error) {\n      console.log(\"sfsdfs\");\n    }\n  };\n\n  // handles click when add button is clicked , makes request to server to add todo.\n  const addTodoHandler = async () => {\n    // gets user from local storage with auth token.\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // request to add todo , user is used as arg.\n    addTodoRequest(user);\n    // sets clear this resets the state of buttons.\n    await props.setClearEdit(true);\n    // sets clear to default.\n    props.setClearEdit(null);\n  };\n\n  // stores user input and limits number of characters.\n  const handleAddChange = (e, set) => {\n    // set used to set state with input value.\n    set(e.target.value);\n    // checks if input value is less than 140 characters else sets error message.\n    if (e.target.value.length >= 140) {\n      setError(\"Maxlength 140 Characters\");\n    } else {\n      setError(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"addTodo-form container px-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTodo-title-container mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"m-0 \",\n        children: \"Add toDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-error-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group add-group \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control p-1\",\n        id: \"newTodo\",\n        placeholder: \"Enter Todo\",\n        value: addEntry,\n        onChange: e => handleAddChange(e, setAddEntry),\n        maxLength: 140\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary add-btn\",\n        onClick: addTodoHandler,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined add-symbol\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTodo, \"Ru/pQwBet1WESbptcGejNv6PmdI=\");\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddTodo","props","_s","addEntry","setAddEntry","error","setError","clear","addTodoRequest","user","todo","response","fetch","method","headers","Authorization","token","body","JSON","stringify","data","json","ok","setUserTodos","console","log","addTodoHandler","parse","localStorage","getItem","setClearEdit","handleAddChange","e","set","target","value","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onChange","maxLength","onClick","_c","$RefreshReg$"],"sources":["/Users/yashin/Documents/GitHub/Codespace/todo_app_auth/frontend/src/components/AddTodo.js"],"sourcesContent":["import { useState } from \"react\";\n// css\nimport \"./AddTodo.css\";\n\nconst AddTodo = (props) => {\n  // stores user to do\n  const [addEntry, setAddEntry] = useState(\"\");\n  // sets error message\n  const [error, setError] = useState(null);\n\n  // clears or resets states.\n  const clear = () => {\n    setAddEntry(\"\");\n    setError(null);\n  };\n\n  // Request to add todo to db.\n  // Takes user a arg.\n  const addTodoRequest = async (user) => {\n    // stores user entry\n    const todo = addEntry;\n    try {\n      // sends todo and auth token to server.\n      const response = await fetch(\"/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n        body: JSON.stringify({ todo }),\n      });\n\n      // gets all todos from server.\n      const data = await response.json();\n      // if res issue sets error.\n      if (!response.ok) {\n        // sets error with server error\n        setError(data.error);\n      }\n\n      //  if res ok sets todo data from server.\n      if (response.ok) {\n        props.setUserTodos(data);\n        // clears states.\n        clear();\n      }\n    } catch (error) {\n      console.log(\"sfsdfs\");\n    }\n  };\n\n  // handles click when add button is clicked , makes request to server to add todo.\n  const addTodoHandler = async () => {\n    // gets user from local storage with auth token.\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // request to add todo , user is used as arg.\n    addTodoRequest(user);\n    // sets clear this resets the state of buttons.\n    await props.setClearEdit(true);\n    // sets clear to default.\n    props.setClearEdit(null);\n  };\n\n  // stores user input and limits number of characters.\n  const handleAddChange = (e, set) => {\n    // set used to set state with input value.\n    set(e.target.value);\n    // checks if input value is less than 140 characters else sets error message.\n    if (e.target.value.length >= 140) {\n      setError(\"Maxlength 140 Characters\");\n    } else {\n      setError(null);\n    }\n  };\n\n  return (\n    <form className=\"addTodo-form container px-0\">\n      <div className=\"addTodo-title-container mb-3\">\n        <h3 className=\"m-0 \">Add toDo</h3>\n        {error && (\n          <div className=\"add-error-container\">\n            <p className=\"m-0\">{error}</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"form-group add-group \">\n        <input\n          type=\"text\"\n          className=\"form-control p-1\"\n          id=\"newTodo\"\n          placeholder=\"Enter Todo\"\n          value={addEntry}\n          onChange={(e) => handleAddChange(e, setAddEntry)}\n          maxLength={140}\n        />\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary add-btn\"\n          onClick={addTodoHandler}\n        >\n          <span className=\"material-symbols-outlined add-symbol\">add</span>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTodo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}